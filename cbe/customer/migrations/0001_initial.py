# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-05 11:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gm2m.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('valid_from', models.DateTimeField(auto_now_add=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('party_object_id', models.PositiveIntegerField()),
                ('customer_number', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('customer_status', models.CharField(choices=[('new', 'new'), ('active', 'active'), ('inactive', 'inactive'), ('prospective', 'prospective')], max_length=100)),
                ('contact_mediums', gm2m.fields.GM2MField(through_fields=('gm2m_src', 'gm2m_tgt', 'gm2m_ct', 'gm2m_pk'))),
                ('party_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_customer_ownership', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerAccount',
            fields=[
                ('account_number', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('account_status', models.CharField(max_length=100)),
                ('account_type', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=300)),
                ('pin', models.CharField(blank=True, max_length=100, null=True)),
                ('credit_limit', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAccountContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateTimeField(auto_now_add=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('party_object_id', models.PositiveIntegerField()),
                ('contact_mediums', gm2m.fields.GM2MField(through_fields=('gm2m_src', 'gm2m_tgt', 'gm2m_ct', 'gm2m_pk'))),
                ('party_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_customeraccountcontact_ownership', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerAccountRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('relationship_type', models.CharField(max_length=200)),
                ('from_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_from_account', to='customer.CustomerAccount')),
                ('to_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_to_account', to='customer.CustomerAccount')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('interaction_status', models.CharField(blank=True, max_length=100, null=True)),
                ('place_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('customer_order_type', models.CharField(blank=True, max_length=200, null=True)),
                ('place_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_customerorder_place_ownership', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_interaction_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('action', models.CharField(blank=True, choices=[('add', 'add'), ('update', 'update'), ('delete', 'delete')], max_length=50, null=True)),
                ('place_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('business_interaction_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_customerorderitem_interaction_ownership', to='contenttypes.ContentType')),
                ('place_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_customerorderitem_ownership', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customeraccount',
            name='customer_account_contact',
            field=models.ManyToManyField(blank=True, to='customer.CustomerAccountContact'),
        ),
    ]
