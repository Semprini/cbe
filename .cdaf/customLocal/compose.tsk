& $WORKSPACE\capabilities.ps1

Write-Host "`nLoad the branch (REVISION) and container image from the manifest, placed here by package.tsk`n"
PROPLD manifest.txt

$id = $("${SOLUTION}_${REVISION}").ToLower()
$env:WORK_SPACE = Split-Path -parent $WORKSPACE
Write-host $env:WORK_SPACE

# Copy any artefacts needed into specific images here

cd compose
..\imageBuild.ps1 ${id} ${BUILDNUMBER} ${containerImage}
cd ..

ASSIGN $env:TARGET_TAG = "${id}_runtime"
ASSIGN $env:TEST_TAG = "${id}_test"
.\dockerClean.ps1 $env:TARGET_TAG ${BUILDNUMBER}
.\dockerClean.ps1 $env:TEST_TAG ${BUILDNUMBER}

ASSIGN $composePersist = "${env:TEMP}\${id}"
MAKDIR $composePersist
VECOPY compose\docker-compose.yml $composePersist
cd $composePersist

Write-Host "`nCleanup from previously test`n"
EXECMD 'docker-compose down --remove-orphans'

Write-Host "Set the build number to use`n"
$env:TARGET_TAG = "${id}_runtime:${BUILDNUMBER}"
$env:TEST_TAG = "${id}_test:${BUILDNUMBER}"
Write-Host "  `$env:TARGET_TAG = $env:TARGET_TAG"
Write-Host "  `$env:TEST_TAG   = $env:TEST_TAG"

EXECMD 'docker-compose up -d runtime'
& $WORKSPACE\dockerLog.ps1 DOCKER-COMPOSE 'Watching for file changes with StatReloader'

Write-Host "Execute tests (allow 5 minutes to complete)`n"
EXECMD 'docker-compose up -d test'
$containerID = $(docker ps -aq --filter "ancestor=$env:TEST_TAG")
& $WORKSPACE\dockerLog.ps1 $containerID 'Automated Test Execution completed successfully.' 300

Write-Host "`nTear down if not explicit variable to retain`n"
if ( $env:COMPOSE_KEEP ) { docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq) } else { EXECMD 'docker-compose down' }

cd $WORKSPACE

echo "Clean-up Transient Directory Created by imageBuild.sh"
REMOVE "$env:TEMP\${SOLUTION}"
